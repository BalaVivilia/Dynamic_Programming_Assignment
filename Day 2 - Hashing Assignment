Question 1:    Two Sum
----------    --------
 Given an array of integers nums and an integer target, return indices of the two numbers such that they
 add up to target.
 You may assume that each input would have exactly one solution, and you may not use the same
 element twice.
 You can return the answer in any order.

 Example:
 Input: nums = [2,7,11,15], target = 9
 Output: [0,1]
 Explanation: Because nums[0] + nums[1] == 9, we return [0, 1]



Program:
-------

def twoSums(nums,target):
    num_Index={}                                               #Initializing an empty Dictionary.
    for index,num in enumerate(nums):                          #Iterating the nums array using enumerate so that both the index and num is checked.
        diff=target-num                                        #Finding the difference between the target and the num (9-2=7).
        if diff in num_Index:                                  #If the difference is in the num_Index it returns the index of the num_Index in which the diff is found and the index of nums.
            return [num_Index[diff],index]                     
        num_Index[num]=index                                  #Else the num_Index[num]=index is done that is num_Index[2]=0.
    return[]                                                  #If none of the elements make up the target then it returns an empty array.

nums=list(map(int,input().split()))
target=int(input())
print(twoSums(nums,target))

__________________________________________________________________________________________________________________________________________________________________________________________________


Question 2:        Group Anagrams
-----------       ----------------
 Given an array of strings strs, group the anagrams together. You can return the answer in any order.
 An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase,
 typically using all the original letters exactly once.

 Example:
 Input: strs = ["eat","tea","tan","ate","nat","bat"]
 Output: [["bat"],["nat","tan"],["ate","eat","tea"]



Program:
--------






_____________________________________________________________________________________________________________________________________________________________________________


Question 3:              Longest Substring Without Repeating Characters
-----------            -------------------------------------------------
 
 Given a string s, find the length of the longest substring without repeating characters.

Example:
 Input: s = "abcabcbb"
 Output: 3
 Explanation: The answer is "abc", with the length of 3



Program:
--------



______________________________________________________________________________________________________________________________________________________________________________


Question 4:      Top K Frequent Elements
----------      -------------------------

 Given an integer array nums and an integer k, return the k most frequent elements. You may return the
 answer in any order.
 Example:
 Input: nums = [1,1,1,2,2,3], k = 2
 Output: [1,2]



Program:
--------

def frequencyOfKElements(nums,k):
    frequency={}
    for num in nums:
        if num in frequency:
            frequency[num]+=1 
        frequency[num]=1

    sorted_elements = sorted(frequency, key=lambda x: frequency[x], reverse=True)
    
    return sorted_elements[:k]
    
nums=list(map(int,input().split()))
k=int(input())
print(frequencyOfKElements(nums,k))





______________________________________________________________________________________________________________________________________________________________________________


Question 5:        Valid Anagram
----------        ---------------

 Given two strings s and t, return true if t is an anagram of s, and false otherwise.

 Example:
 Input: s = "anagram", t = "nagaram"
 Output: true
 Input: s = "rat", t = "car"
 Output: false



Program:
--------

import java.util.*;
class LongSubstrWithoutRepeatingChar {
    public static void main(String[] args) {
       Scanner sc=new Scanner(System.in);
       String s=sc.nextLine();
       String t=sc.nextLine();
       char arr1[]=s.toCharArray();
       char arr2[]=t.toCharArray();
       
       Arrays.sort(arr1);
       Arrays.sort(arr2);
       
       if(new String(arr1).equals(new String(arr2))){
           System.out.print("true");
       }
       else{
           System.out.print("false");
       }
    }
}


____________________________________________________________________________________________________________________________________________________________________________
